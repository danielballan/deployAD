---
- name: Deploy AreaDetector on a target host
  hosts: all
  become: true
  vars:     
    synApps_modules: 
      - configure
      - documentation
      - utils
    
  tasks:
      - name: include vars 
        include_vars: config.yml

      - include_role:
          name: CentOS
        when: ansible_os_family == 'RedHat'
        
      - include_role:
          name: Debian
        when: ansible_os_family == 'Debian'
      
      - name: clone epic_base        
        git:
              clone: yes
              update: yes
              recursive: yes
              track_submodules: yes
              force: yes
              dest: "{{deployment_dir}}/epics-base"
              repo: https://github.com/epics-base/epics-base
              version: "{{epics_base_version}}"
        environment:
              https_proxy: https://proxy:8888
      - name: clone synApps  into support       
        git:
              clone: yes
              update: yes
              recursive: yes
              track_submodules: yes
              force: yes
              dest: "{{deployment_dir}}/support"
              repo: https://github.com/EPICS-synApps/support
              version: "{{synApps_version}}"
        environment:
              https_proxy: https://proxy:8888
                      
      - name: clone synApps modules [configure, documentation, utils]  
        git:
              clone: yes
              update: yes
              force: yes
              dest: "{{deployment_dir}}/support/{{ item }}"
              repo: "https://github.com/EPICS-synApps/{{ item }}"
              version: "{{synApps_version}}"
        with_items:  
          - "{{ synApps_modules }}"     
        environment: 
             https_proxy: https://proxy:8888  

      - name: clone "{{epics_modules}}"  
        git:
              clone: yes
              update: yes
              force: yes
              dest: "{{deployment_dir}}/support/{{ item }}"
              repo: "https://github.com/epics-modules/{{ item }}"
              #version: "{{ ipac.version }}"
              version: "{{ epicsmodules[item].version }}"
        with_items:  
          - "{{ epics_modules }}"   
        environment: 
             https_proxy: https://proxy:8888      

#      - name: buid base Later will build all, just like install all packages
#        command: 
#              cmd: make -sj
#              chdir: "{{deployment_dir}}/epics-base" 
#            